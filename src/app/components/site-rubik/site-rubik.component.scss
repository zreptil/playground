:host {
  display: flex;
  flex-flow: row;
  height: var(--doc-height);
}

[left] {
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: center;
  gap: 5px;
  flex-wrap: wrap;
  box-shadow: 0 5px 15px black;
}

[right] {
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
  flex: auto;
  overflow: auto;
  padding: 4px;
}

[cross] {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
}

[moves] {
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
}

.cube {
  --border: 2;
  --borderPX: 2px;
  --plate-size: 50px;
  --cf-size: calc((var(--plate-size) + 3px) * 3);
  --tz: calc(var(--plate-size) * (47 + var(--border) / 2) / 30);

  user-select: none;
  // width: calc(var(--cf-size) * 4);
  height: 100%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1;

  #cube {
    position: relative;
    perspective: calc(var(--plate-size) * 10);
  }

  [cube] {
    width: calc(var(--cf-size) * 2);
    height: calc(var(--cf-size) * 3);
    margin: auto;

    .face {
      position: absolute;
      overflow: visible;
      top: var(--cf-size);
      left: calc(var(--cf-size) / 2);
      border: var(--borderPX) solid black;
      border-radius: 4px;

      .plates {
        --size: var(--plate-size);
        --frame: 2px;
        --gap: 4px;
        --extents: calc(var(--size) * 3 + var(--frame) * 2);
        display: grid;
        gap: var(--frame);
        grid-template-columns: var(--size) var(--size) var(--size);
        grid-template-rows: var(--size) var(--size) var(--size);
        background-color: black;
        width: var(--extents);
        height: var(--extents);
        padding: var(--frame);
        position: relative;

        [cell] {
          --v1: 0.15em;
          --v2: 0.3rem;
          --v3: -0.15em;
          --m: 2px;
          --s: calc(var(--size) - 2 * var(--m));
          box-shadow: inset var(--v1) var(--v1) var(--v2) 0 rgba(255, 255, 255, 0.25), inset var(--v3) var(--v3) var(--v2) 0 rgba(0, 0, 0, 0.25);
          border-radius: 4px;
          width: var(--s);
          height: var(--s);
          margin: var(--m);
          background-color: white;
          font-size: 60%;
          display: flex;
          align-items: center;
          font-weight: bold;
          justify-content: center;
        }

        [cell].debug {
        }

        [cell].colorize {
          font-size: 2em;
          font-weight: bold;
        }
      }
    }
  }


  [cube].flat {
    width: calc(var(--cf-size) * 4);
    height: calc(var(--cf-size) * 3);

    .face.u {
      top: 0;
      left: var(--cf-size);
    }

    .face.l {
      top: var(--cf-size);
      left: 0;
    }

    .face.f {
      top: var(--cf-size);
      left: var(--cf-size);
    }

    .face.r {
      top: var(--cf-size);
      left: calc(var(--cf-size) * 2);
    }

    .face.b {
      top: var(--cf-size);
      left: calc(var(--cf-size) * 3);
    }

    .face.d {
      top: calc(var(--cf-size) * 2);
      left: var(--cf-size);
    }
  }

  [cube].three-d.colorize {
    [face]:hover {

      [plate] {
        background-image: url('../../../assets/images/close.png');
        background-size: 50%;
        opacity: 0.5 !important;
      }
    }
  }

  [cube].three-d:not(.colorize) {
    ::ng-deep .cfm {
      display: none;
      color: white;
      font-size: 75%;
    }

    [face]:hover {
      ::ng-deep .blind {
        display: none;
      }

      ::ng-deep .cfm {
        display: inherit;
      }
    }

    [face].al:hover {
      [plate] {
        background-image: url('../../../assets/images/arrow-left.png');
      }
    }

    [face].au:hover {
      [plate] {
        background-image: url('../../../assets/images/arrow-up.png');
      }
    }

    [face].ar:hover {
      [plate] {
        background-image: url('../../../assets/images/arrow-right.png');
      }
    }

    [face].ad:hover {
      [plate] {
        background-image: url('../../../assets/images/arrow-down.png');
      }
    }
  }

  [cube].three-d {
    transform-style: preserve-3d;
    cursor: pointer;
    position: absolute;
    left: 50%;
    top: 50%;
    width: calc(var(--cs) * 3);
    height: calc(var(--cs) * 3);

    [_cubicle]:hover {
      --b1: cornflowerblue;
      --b2: var(--b1);
      --b3: var(--b1);
      --b4: var(--b1);
      --b5: var(--b1);
      --b6: var(--b1);
    }

    [face] [plate] {
      background-repeat: no-repeat;
      background-position: 50% 50%;
      background-size: 100%;
    }

    [cubicle] {
      transform-style: inherit;
      position: absolute;

      [face] {
        --tz: calc(var(--plate-size) / 2 - 1px);
        transform-style: inherit;
        position: absolute;
        background-color: black;
        border-radius: 2px;

        [plate] {
          --border: calc(var(--plate-size) / 15);
          --ps: calc(var(--plate-size) - 2 * var(--border));
          --v1: 2px;
          --v2: 1px;
          --v3: -2px;
          border: var(--border) solid black;
          border-radius: calc(var(--border) * 2);
          box-shadow: inset var(--v1) var(--v1) var(--v2) 0 rgba(255, 255, 255, 0.25), inset var(--v3) var(--v3) var(--v2) 0 rgba(0, 0, 0, 0.25);
          width: var(--ps);
          height: var(--ps);
          display: flex;
          align-items: center;
          justify-content: center;
        }

        [plate].colorize {
          font-size: 2em;
          font-weight: bold;
        }
      }

      [face].l {
        transform: rotateX(0deg) rotateY(-90deg) rotateZ(0deg) translateZ(var(--tz));
      }

      [face].r {
        transform: rotateX(0deg) rotateY(90deg) rotateZ(0deg) translateZ(var(--tz));
      }

      [face].b {
        transform: rotateX(0deg) rotateY(180deg) rotateZ(0deg) translateZ(var(--tz));
      }

      [face].f {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateZ(var(--tz));
      }

      [face].d {
        transform: rotateX(-90deg) rotateY(0deg) rotateZ(0deg) translateZ(var(--tz));
      }

      [face].u {
        transform: rotateX(90deg) rotateY(0deg) rotateZ(0deg) translateZ(var(--tz));
      }
    }
  }

}

[image] {
  width: 200px;
  border: 1px solid black;
}
