[frame] {
  display: flex;
  flex-flow: column;
  border: 1px solid black;
  border-radius: 5px;
  padding: 10px;
  margin: 2px;

  [moves] {
    --size: 25px;
    --frame: 2px;
    --gap: 4px;
    --extents: calc(var(--size) * 3 + var(--frame) * 2);

    display: flex;
    flex-flow: row;
    flex-wrap: wrap;
    gap: var(--gap);
    _max-width: calc(var(--extents) * 3 + 5 * var(--gap));
    transform-style: preserve-3d;
    position: relative;
    align-items: center;

    [name] {
      // position: absolute;
      font-size: 75%;
      font-weight: bold;
    }

    [root] {
      --ext: calc(var(--extents) + var(--frame));
      --tz: calc(var(--size) * 1.6);
      display: flex;
      flex-flow: row;
      position: relative;
      width: calc(var(--ext) * 1.4);
      height: calc(var(--ext) * 2);
      transform-style: inherit;
      transform: rotateX(-30deg) rotateY(-30deg) rotateZ(0deg) translateX(50px) translateZ(50px);

      [face] {
        position: absolute;
        width: var(--extents);
        height: var(--extents);
        padding: var(--frame);
        display: grid;
        gap: var(--frame);
        grid-template-columns: var(--size) var(--size) var(--size);
        grid-template-rows: var(--size) var(--size) var(--size);
        background-color: black;
        transform-style: inherit;
        left: 0;
        top: 0;

        [cell] {
          border-radius: 2px;
          width: var(--size);
          height: var(--size);
          background-color: white;
        }

        [move] {
          --s: calc(var(--size) * 3 + var(--frame) * 2);
          position: absolute;
          transform-origin: calc(var(--s) / 2) calc(var(--s) / 2);
          top: var(--frame);
          left: var(--frame);
          width: var(--s);
          height: var(--s);
          display: flex;
          align-items: center;
          justify-content: center;

          mat-icon {
            font-size: var(--size);
            font-weight: bold;
            width: var(--size);
            height: var(--size);
            //        background-color: white;
          }
        }

        mat-icon.up {
          transform: rotate(-90deg);
        }

        mat-icon.down {
          transform: rotate(90deg);
        }

        mat-icon.left {
          transform: scaleX(-1);
        }

        .top {
          align-items: flex-start;
        }

        .bottom {
          align-items: flex-end;
        }

        [move].left {
          justify-content: flex-start;
        }

        [move].right {
          justify-content: flex-end;
        }
      }

      [flat] {
        transform: rotateX(30deg) rotateY(30deg) rotateZ(-15deg) translateZ(var(--tz));
      }

      [top] {
        transform: rotateX(90deg) rotateY(0deg) rotateZ(0deg) translateZ(var(--tz));
      }

      [front] {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateZ(var(--tz));
      }

      [right] {
        transform: rotateX(0deg) rotateY(90deg) rotateZ(0deg) translateZ(var(--tz));
      }
    }
  }

  //.cube {
  //user-select: none;
  //width: calc(var(--cf-size) * 4);
  //position: relative;
  //display: flex;
  //align-items: center;
  //justify-content: center;
  //flex: 1;
  //
  //#cube {
  //  position: relative;
  //  perspective: calc(var(--plate-size) * 10);
  //}
  //

  .cube {
    --border: 1;
    --borderPX: 1px;
    --plate-size: 20px;
    --cf-size: calc((var(--plate-size) + 1px) * 3);
    --tz: calc(var(--plate-size) * (47 + var(--border) / 2) / 30);
    width: calc(var(--cf-size) * 2);
    height: calc(var(--cf-size) * 2);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  [cube] {
    width: 100%;
    height: 100%;
    margin: auto;
    transform-style: preserve-3d;
    cursor: pointer;

    .face {
      position: absolute;
      overflow: visible;
      top: var(--cf-size);
      left: calc(var(--cf-size) / 2);
      border: var(--borderPX) solid black;
      border-radius: 4px;

      .plates {
        --size: var(--plate-size);
        --frame: 1px;
        --gap: 4px;
        --extents: calc(var(--size) * 3 + var(--frame) * 2);
        display: grid;
        gap: var(--frame);
        grid-template-columns: var(--size) var(--size) var(--size);
        grid-template-rows: var(--size) var(--size) var(--size);
        background-color: black;
        width: var(--extents);
        height: var(--extents);
        padding: var(--frame);
        position: relative;

        [cell] {
          --v1: 0.15em;
          --v2: 0.3rem;
          --v3: -0.15em;
          --m: 0px;
          --s: calc(var(--size) - 2 * var(--m));
          border-radius: 4px;
          width: var(--s);
          height: var(--s);
          margin: var(--m);
          background-color: white;
          font-size: 60%;
          display: flex;
          align-items: center;
          font-weight: bold;
          justify-content: center;
        }

        [cell].debug {
        }

        [cell].colorize {
          font-size: 2em;
          font-weight: bold;
        }
      }
    }

    .face.u {
      transform: rotateX(90deg) translateX(0) translateY(0) translateZ(var(--tz));
    }

    .face.l {
      transform: rotateY(-90deg) translateX(0) translateY(0) translateZ(var(--tz));
    }

    .face.f {
      transform: translateX(0) translateY(0) translateZ(var(--tz));
    }

    .face.r {
      transform: rotateY(90deg) translateX(0) translateY(0) translateZ(var(--tz));
    }

    .face.b {
      transform: rotateY(180deg) translateX(0) translateY(0) translateZ(var(--tz));
    }

    .face.d {
      transform: rotateX(-90deg) translateX(0) translateY(0) translateZ(var(--tz));
    }
  }
}

